#!/usr/bin/env powershell

################################################################################
# The John Operating System Project is the collection of software and configurations
# to generate IoT EcoSystem, like the John Operating System Platform one.
# Copyright (C) 2021 Roberto Pompermaier
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
################################################################################

# Customize this script editing all '#   #...' comments

###############################################################################
# Stop HW Daemon script.
#
# This script stop the HW Daemon started via the 'start_daemon.sh' script.
# According to the HW Daemon purpose, this script can be called via the
# 'post-shutdown.sh' script.
#
# The start_daemon.ps1 and stop_daemon.ps1 scripts detect if the HW Daemon is
# already running via the $DAEMON_PID_FILE.
#
# Artifact: JOD Dist Template
# Version:  1.0.3
###############################################################################

#   # Customize daemon name and default refresh time
$DAEMON_NAME="PC Windows"


## Default init - START
$JOD_DIR = (get-item $PSScriptRoot).Parent.Parent.FullName
.$JOD_DIR/scripts/libs/include.ps1 "$JOD_DIR"

#$DEBUG=$true
if (($null -ne $DEBUG) -and ($DEBUG))
{
  INSTALL-LogsDebug
}
else
{
  INSTALL-Logs
}
setupCallerAndScript $PSCommandPath $MyInvocation.PSCommandPath

."$JOD_DIR/scripts/jod/jod-script-configs.ps1"
execScriptConfigs "$JOD_DIR/scripts/jod/errors.ps1"

# Load jod_configs.sh, exit if fails
setupJODScriptConfigs "$JOD_DIR/configs/configs.ps1"
## Default init - END


## Daemon init - START
$SCRIPT_DIR=(Get-Item $PSCommandPath ).DirectoryName

# PID vars
$PID_DIR="$SCRIPT_DIR/.pid"
$PID_FILE="$PID_DIR/daemon.pid"
## Daemon init - END


#   # Customize with daemon's name and vars initialization
## {DAEMON's name} init - START

## {DAEMON's name} init - END


## Daemon - STOP

# Check pid
if (-Not(Test-Path -Path "$PID_FILE" -PathType Leaf)) {
  logWar "$DAEMON_NAME Daemon already stopped"
  exit
}

# Check if it's running
$pid_running = (Get-Content "$PID_FILE" -Raw)
$process = (Get-Process -ID $pid_running -ea 0)
$running = $null -ne $process
if (-Not($running)) {
  logWar "$DAEMON_NAME Daemon not running, removing PID file only"
  Remove-Item $PID_FILE
  exit
}

# Stop daemon
logInf "Stop $DAEMON_NAME Daemon"
Stop-Process -ID $pid_running
Start-Sleep 1

# Check if must force daemon stop
$process = (Get-Process -ID $pid_running -ea 0)
$running = $null -ne $process
if ($running) {
  logInf "Stop $DAEMON_NAME Daemon (forced)"
  Stop-Process -ID $pid_running -Force
}

# Remove pid file
Remove-Item $PID_FILE
